diff --git a/docs/VARIABLES.md b/docs/VARIABLES.md
index 631c1414..5ceacc7c 100644
--- a/docs/VARIABLES.md
+++ b/docs/VARIABLES.md
@@ -1588,11 +1588,11 @@ Default:  "{{ skip_restarts }}"
 
 ***
 
-### schema_registry_oauth_enabled
+### schema_registry_auth_mode
 
-Boolean used for enabling OAuth Server on Schema Registry
+Variable to set auth mode on Schema Registry. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
 
-Default:  "{{ oauth_enabled }}"
+Default:  "{{ auth_mode }}"
 
 ***
 
@@ -1780,11 +1780,11 @@ Default:  "{{ skip_restarts }}"
 
 ***
 
-### kafka_rest_oauth_enabled
+### kafka_rest_auth_mode
 
-Boolean used for enabling OAuth Server on Rest Proxy
+Variable to set auth mode on Rest Proxy. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
 
-Default:  "{{ oauth_enabled }}"
+Default:  "{{ auth_mode }}"
 
 ***
 
@@ -2060,11 +2060,11 @@ Default:  "{{ skip_restarts }}"
 
 ***
 
-### kafka_connect_oauth_enabled
+### kafka_connect_auth_mode
 
-Boolean used for enabling OAuth Server on Kafka Connect
+Variable to set auth mode on Kafka Connect server. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
 
-Default:  "{{ oauth_enabled }}"
+Default:  "{{ auth_mode }}"
 
 ***
 
@@ -2548,19 +2548,11 @@ Default:  none
 
 ***
 
-### oauth_enabled
+### auth_mode
 
-Boolean to enable OAuth on all cp components, except ksqlDB. When set to true, you must set oauth_jwks_uri, oauth_token_uri, oauth_issuer_url, oauth_client_id, oauth_client_password
+Authorization mode on all cp components. Possible values are ldap, oauth, ldap_with_oauth and none. Set this to oauth for OAuth cluster and ldap_with_oauth for cluster with both ldap and oauth support. When set to oauth or ldap_with_oauth, you must set oauth_jwks_uri, oauth_token_uri, oauth_issuer_url, oauth_client_id, oauth_client_password.
 
-Default:  false
-
-***
-
-### ldap_with_oauth_enabled
-
-Boolean to enable OAuth with LDAP, required when dual support needed. oauth_enabled flag also needs to be true
-
-Default:  false
+Default:  "{% if rbac_enabled|bool %}ldap{% else %}none{% endif %}"
 
 ***
 
@@ -3812,11 +3804,11 @@ Default:  "{{ skip_restarts }}"
 
 ***
 
-### kafka_connect_replicator_oauth_enabled
+### kafka_connect_replicator_auth_mode
 
-Boolean used for enabling OAuth Server on Kafka Connect Replicator
+Variable to set auth mode on Connect Replicator. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
 
-Default:  "{{ oauth_enabled }}"
+Default:  "{{ auth_mode }}"
 
 ***
 
diff --git a/molecule/oauth-plain-rhel/molecule.yml b/molecule/oauth-plain-rhel/molecule.yml
index bc31e687..9d198a73 100644
--- a/molecule/oauth-plain-rhel/molecule.yml
+++ b/molecule/oauth-plain-rhel/molecule.yml
@@ -200,11 +200,8 @@ provisioner:
         ssl_enabled: true
         keycloak_oauth_server_port: 8443
         keycloak_http_protocol: https
-        oauth_enabled: true
-        schema_registry_oauth_enabled: false # to test disabling OAuth on one component on a non rbac cluster
-        kafka_connect_oauth_enabled: true
-        kafka_rest_oauth_enabled: true
-
+        auth_mode: oauth
+        schema_registry_auth_mode: none # to test disabling OAuth on one component on a non rbac cluster
         oauth_client_id: superuser
         oauth_client_password: my-secret
 
diff --git a/molecule/oauth-rbac-plain-provided-debian12/molecule.yml b/molecule/oauth-rbac-plain-provided-debian12/molecule.yml
index 0dfe2c38..9fe2baf0 100644
--- a/molecule/oauth-rbac-plain-provided-debian12/molecule.yml
+++ b/molecule/oauth-rbac-plain-provided-debian12/molecule.yml
@@ -227,11 +227,9 @@ provisioner:
         keycloak_oauth_server_port: 8443
         keycloak_http_protocol: https
         oauth_idp_cert_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/oauthcertfile.pem"
-        oauth_enabled: true
-        schema_registry_oauth_enabled: false # to test SR without OAuth after upgrade
-        kafka_rest_oauth_enabled: true
-        kafka_connect_oauth_enabled: true
-        ldap_with_oauth_enabled: true
+        auth_mode: "ldap_with_oauth"
+        schema_registry_auth_mode: "ldap" # to test SR without OAuth after upgrade
+        
         oauth_client_id: superuser
         oauth_client_password: my-secret
         oauth_sub_claim: client_id
@@ -335,7 +333,7 @@ provisioner:
         secrets_protection_enabled: true
 
       kafka_rest: # kafka rest to communicate to broker with ldap
-        oauth_enabled: false
+        auth_mode: ldap
       ldap_server:
         ldaps_enabled: false
 
diff --git a/molecule/oauth-rbac-plain-rhel8/molecule.yml b/molecule/oauth-rbac-plain-rhel8/molecule.yml
index 6d7ea0cd..f3813992 100644
--- a/molecule/oauth-rbac-plain-rhel8/molecule.yml
+++ b/molecule/oauth-rbac-plain-rhel8/molecule.yml
@@ -236,7 +236,7 @@ provisioner:
         keycloak_oauth_server_port: 8443
         keycloak_http_protocol: https
         oauth_idp_cert_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/oauthcertfile.pem"
-        oauth_enabled: true
+        auth_mode: oauth
         oauth_client_id: superuser
         oauth_client_password: my-secret
         oauth_sub_claim: client_id
diff --git a/roles/common/tasks/config_validations.yml b/roles/common/tasks/config_validations.yml
index 1538f088..13b68343 100644
--- a/roles/common/tasks/config_validations.yml
+++ b/roles/common/tasks/config_validations.yml
@@ -159,16 +159,6 @@
     - ansible_os_family == "RedHat"
   tags: validate
 
-- assert:
-    that:
-      - oauth_enabled|bool
-    fail_msg: "Please enable OAuth on your cluster to setup LDAP with OAuth"
-  when:
-    - ldap_with_oauth_enabled | bool
-    - inventory_hostname in groups.kafka_broker
-    - not external_mds_enabled | bool
-  tags: validate
-
 - assert:
     that:
       - "{{item}} != 'none'"
@@ -177,12 +167,12 @@
     - oauth_token_uri
     - oauth_issuer_url
     - oauth_jwks_uri
-  when: oauth_enabled | bool
+  when: auth_mode == 'oauth' or auth_mode == 'ldap_with_oauth'
   tags: validate
 
 - assert:
     that:
       - not fips_enabled|bool
     fail_msg: "OAuth is not supported on FIPS enabled cluster yet. Please disable FIPS or OAuth to setup the cluster."
-  when: oauth_enabled | bool
+  when: auth_mode == 'oauth' or auth_mode == 'ldap_with_oauth'
   tags: validate
diff --git a/roles/common/tasks/idp_certs.yml b/roles/common/tasks/idp_certs.yml
index 019e3f19..50d9f099 100644
--- a/roles/common/tasks/idp_certs.yml
+++ b/roles/common/tasks/idp_certs.yml
@@ -25,6 +25,7 @@
     keytool -list -keystore {{truststore_path}} \
     -storetype pkcs12 -alias {{alias}} -storepass {{truststore_storepass}}
   ignore_errors: true
+  failed_when: false
   register: cert_imported
   no_log: "{{mask_secrets|bool}}"
 
@@ -47,6 +48,7 @@
     -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \
     -providerpath {{ (binary_base_path, 'share/java/kafka/bc-fips-*.jar') | path_join }}
   ignore_errors: true
+  failed_when: false
   register: cert_imported
   when:
     - create_bouncy_castle_keystore|bool
diff --git a/roles/kafka_controller/tasks/get_meta_properties.yml b/roles/kafka_controller/tasks/get_meta_properties.yml
index 66c4676d..3d4ae388 100644
--- a/roles/kafka_controller/tasks/get_meta_properties.yml
+++ b/roles/kafka_controller/tasks/get_meta_properties.yml
@@ -2,6 +2,7 @@
 - name: Check if Data Directories are Formatted
   shell: "{{ binary_base_path }}/bin/kafka-storage info -c {{ kafka_controller.config_file }}"
   ignore_errors: true
+  failed_when: false
   register: formatted
 
 - name: Get ClusterId
diff --git a/roles/kafka_controller/tasks/health_check.yml b/roles/kafka_controller/tasks/health_check.yml
index d0eaebb0..c364c99d 100644
--- a/roles/kafka_controller/tasks/health_check.yml
+++ b/roles/kafka_controller/tasks/health_check.yml
@@ -7,6 +7,7 @@
   environment:
     KAFKA_OPTS: "-Xlog:all=error -XX:+IgnoreUnrecognizedVMOptions {% if kerberos_client_config_file_dest != '/etc/krb5.conf' %}-Djava.security.krb5.conf={{kerberos_client_config_file_dest}}{% endif %}"
   ignore_errors: true
+  failed_when: false
   changed_when: false
   check_mode: false
   register: greenfield
diff --git a/roles/variables/defaults/main.yml b/roles/variables/defaults/main.yml
index bb4546e6..6b8d1805 100644
--- a/roles/variables/defaults/main.yml
+++ b/roles/variables/defaults/main.yml
@@ -808,8 +808,8 @@ schema_registry_cluster_name: ""
 ### Boolean used for disabling of systemd service restarts when rootless install is executed
 schema_registry_skip_restarts: "{{ skip_restarts }}"
 
-### Boolean used for enabling OAuth Server on Schema Registry
-schema_registry_oauth_enabled: "{{ oauth_enabled }}"
+### Variable to set auth mode on Schema Registry. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
+schema_registry_auth_mode: "{{ auth_mode }}"
 
 #### Kafka Rest Variables ####
 
@@ -908,8 +908,8 @@ kafka_rest_monitoring_interceptors_enabled: "{{ monitoring_interceptors_enabled
 ### Boolean used for disabling of systemd service restarts when rootless install is executed
 kafka_rest_skip_restarts: "{{ skip_restarts }}"
 
-### Boolean used for enabling OAuth Server on Rest Proxy
-kafka_rest_oauth_enabled: "{{ oauth_enabled }}"
+### Variable to set auth mode on Rest Proxy. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
+kafka_rest_auth_mode: "{{ auth_mode }}"
 
 # Kafka Connect Variables
 
@@ -1058,8 +1058,8 @@ kafka_connect_connector_white_list: ""
 ### Boolean used for disabling of systemd service restarts when rootless install is executed
 kafka_connect_skip_restarts: "{{ skip_restarts }}"
 
-### Boolean used for enabling OAuth Server on Kafka Connect
-kafka_connect_oauth_enabled: "{{ oauth_enabled }}"
+### Variable to set auth mode on Kafka Connect server. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
+kafka_connect_auth_mode: "{{ auth_mode }}"
 
 #### KSQLDB Variables ####
 
@@ -1472,11 +1472,8 @@ sso_cli: false
 ### Device Authorization endpoint of Idp, Required to enable SSO in cli.
 sso_device_authorization_uri: none
 
-### Boolean to enable OAuth on all cp components, except ksqlDB. When set to true, you must set oauth_jwks_uri, oauth_token_uri, oauth_issuer_url, oauth_client_id, oauth_client_password
-oauth_enabled: false
-
-### Boolean to enable OAuth with LDAP, required when dual support needed. oauth_enabled flag also needs to be true
-ldap_with_oauth_enabled: false
+### Authorization mode on all cp components. Possible values are ldap, oauth, ldap_with_oauth and none. Set this to oauth for OAuth cluster and ldap_with_oauth for cluster with both ldap and oauth support. When set to oauth or ldap_with_oauth, you must set oauth_jwks_uri, oauth_token_uri, oauth_issuer_url, oauth_client_id, oauth_client_password.
+auth_mode: "{% if rbac_enabled|bool %}ldap{% else %}none{% endif %}"
 
 ### Client id for authorize and token request to Idp via cp components. This is the super user for all MDS api calls
 oauth_client_id: none
@@ -1968,8 +1965,8 @@ kafka_connect_replicator_config_prefix: "{{ config_prefix }}/kafka-connect-repli
 ### Boolean used for disabling of systemd service restarts when rootless install is executed
 kafka_connect_replicator_skip_restarts: "{{ skip_restarts }}"
 
-### Boolean used for enabling OAuth Server on Kafka Connect Replicator
-kafka_connect_replicator_oauth_enabled: "{{ oauth_enabled }}"
+### Variable to set auth mode on Connect Replicator. Possible values are oauth, ldap, ldap_with_oauth in RBAC cluster and oauth, none in non RBAC cluster.
+kafka_connect_replicator_auth_mode: "{{ auth_mode }}"
 
 ## Set this variable to customize the Linux User that the Kafka Connect Replicator Service runs with. Default user is cp-kafka-connect-replicator.
 kafka_connect_replicator_user: "{{kafka_connect_replicator_default_user}}"
diff --git a/roles/variables/vars/main.yml b/roles/variables/vars/main.yml
index 613198f9..8526180e 100644
--- a/roles/variables/vars/main.yml
+++ b/roles/variables/vars/main.yml
@@ -32,6 +32,14 @@ kafka_broker_jolokia_java_arg_ssl_addon: ",keystore={{kafka_broker_keystore_path
 kafka_broker_jolokia_urp_url: "{{ 'https' if kafka_broker_jolokia_ssl_enabled|bool else 'http' }}://{{ hostvars[inventory_hostname]|confluent.platform.resolve_hostname }}:{{kafka_broker_jolokia_port}}/jolokia/read/kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
 kafka_broker_jolokia_active_controller_url: "{{ 'https' if kafka_broker_jolokia_ssl_enabled|bool else 'http' }}://{{ hostvars[inventory_hostname]|confluent.platform.resolve_hostname }}:{{kafka_broker_jolokia_port}}/jolokia/read/kafka.controller:type=KafkaController,name=ActiveControllerCount"
 
+# OAuth vars
+oauth_enabled: "{{ true if (auth_mode == 'oauth' or auth_mode == 'ldap_with_oauth') else false }}"
+ldap_with_oauth_enabled: "{{ true if (auth_mode == 'ldap_with_oauth') else false }}"
+schema_registry_oauth_enabled: "{{ true if (schema_registry_auth_mode == 'oauth' or schema_registry_auth_mode == 'ldap_with_oauth') else false }}"
+kafka_rest_oauth_enabled: "{{ true if (kafka_rest_auth_mode == 'oauth' or kafka_rest_auth_mode == 'ldap_with_oauth') else false }}"
+kafka_connect_oauth_enabled: "{{ true if (kafka_connect_auth_mode == 'oauth' or kafka_connect_auth_mode == 'ldap_with_oauth') else false }}"
+kafka_connect_replicator_oauth_enabled: "{{ true if (kafka_connect_replicator_auth_mode == 'oauth' or kafka_connect_replicator_auth_mode == 'ldap_with_oauth') else false }}"
+
 #### Zookeeper Variables ####
 zookeeper_service_name: confluent-zookeeper
 zookeeper_main_package: "{{ 'confluent-server' if confluent_server_enabled|bool else 'confluent-kafka'}}"
